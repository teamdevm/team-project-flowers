openapi: 3.0.0
info:
    title: FlowersAPI specification
    version: 1.0.0
components:
    schemas:
        User:
            # TODO required, think about Member!
            type: object
            properties:
                Id:
                    type: integer
                Name:
                    type: string
                    minLength:
                    maxLength:
                Login:
                    type: string
                    minLength:
                    maxLength:
                Password:
                    type: string
                    format: password
                    minLength:
                    maxLength:
                CreatedDate:
                    type: string
                    format: date-time
                LoginDate:
                    type: string
                    format: date-time
        Member:
            allOf:
                - $ref: '#/components/schemas/User'
                - type: object
                  properties:
                      GreenHouse:
                          $ref: '#/components/schemas/GreenHouse'
                      GreenHouseName:
                          type: string
                          minLength:
                          maxLength:
                      role:
                          $ref: '#/components/schemas/GreenHouseRole'
        Collection:
            type: array
            items:
                $ref: '#/components/schemas/GreenHouse'
        GreenHouse:
            type: object
            properties:
                Id:
                    type: integer
                Plants:
                    type: array
                    items:
                        $ref: '#/components/schemas/Plant'
                Members:
                    type: array
                    items:
                        $ref: '#/components/schemas/Member'
                CreatedDate:
                    type: string
                    format: date-time
        GreenHouseRole:
            type: string
            enum: # TODO add roles
                - s
        Plant:
            type: object
            properties:
                Id:
                    type: integer
                Name:
                    type: string
                    minLength:
                    maxLength:
                CreatedDate:
                    type: string
                    format: date-time
                LastWaterDate:
                    type: string
                    format: date-time
                NextWaterDate:
                    type: string
                    format: date-time
                Species:
                    $ref: '#/components/schemas/PlantSpecies'
        PlantGroup:
            type: string
            enum:
                - s
        PlantSpecies:
            type: object
            properties:
                SpeciesName:
                    type: string
                    enum:
                        -
                Group:
                    $ref: '#/components/schemas/PlantGroup'
    responses:
    requestBodies:
paths:
    /user:
        post:
            summary: Registration of new user
            parameters:
            requestBody:
                required: true
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
    /user/login:
        post:
            summary: Login user
            parameters:
            requestBody:
    /user/{userId}:
        get:
            summary: Get information about user
            parameters:
            requestBody:
        post:
            summary: Update user information
            parameters:
            requestBody:
        delete:
            summary: Delete user
            parameters:
            requestBody:
    /user/{userId}/collection:
        get:
            summary: Return user's collection (aka list of user's greenhouses)
            parameters:
            requestBody:
        post:
            summary: Create new greenhouse in user's collection
            parameters:
            requestBody:
        delete:
            summary: Delete greenhouse from user's collection
            parameters:
            requestBody:
    /greenhouse/{grHouseId}?userId=:
        get:
            summary: Return greenhouse information with it's name for user
            parameters:
            requestBody:
        post:
            summary: Update name of greenhouse for user
            parameters:
            requestBody:
    /greenhouse/{grHouseId}/members:
        get:
            summary: Return list of members (users with their greenhouse roles)
    /greenhouse/{grHouseId}/members/{userId}:
        get:
            summary: Return member in greenhouse
        post:
            summary: Update member role in greenhouse
        delete:
            summary: Delete member from
    /greenhouse/{grHouseId}/plants:
        get:
            summary: Return list of plants in greenhouse
    /plant/{plId}:
        get:
            summary: Return information about plant
        post:
            summary: Update information about plant
        delete:
            summary: Delete plant in greenhouse
    /plant/{plId}/water:
        get:
            summary: Return last and next dates for water
        post:
            summary: Change last date water